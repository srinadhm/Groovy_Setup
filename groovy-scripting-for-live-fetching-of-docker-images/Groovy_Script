https://kublr.com/blog/advanced-jenkins-groovy-scripting-for-live-fetching-of-docker-images/

--------------------

// Import the JsonSlurper class to parse Dockerhub API response
import groovy.json.JsonSlurper
class Example {
   static void main(String[] args) {
      // Using a simple println statement to print output to the console
      println('Hello World');
      // Set the URL we want to read from, it is MySQL from official Library for this example, limited to 20 results only.
      //docker_image_tags_url = "https://hub.docker.com/v2/repositories/srinadhdocker/springboohelloworldjenkinsci/tags/?page_size=20"
      // Set requirements for the HTTP GET request, you can add Content-Type headers and so on...
    def http_client = new URL("https://hub.docker.com/v2/repositories/srinadhdocker/springboohelloworldjenkinsci/tags/?page_size=20").openConnection() as HttpURLConnection
    //def http_client = new URL("https://api.publicapis.org/entries").openConnection() as HttpURLConnection
    http_client.setRequestMethod('GET')
    // Run the HTTP request
    http_client.connect()
    //print(http_client.inputStream.getText('UTF-8'))
    // Prepare a variable where we save parsed JSON as a HashMap, it's good for our use case, as we just need the 'name' of each tag.
    def dockerhub_response = [:]    
    // Check if we got HTTP 200, otherwise exit
    if (http_client.responseCode == 200) {
        dockerhub_response = new JsonSlurper().parseText(http_client.inputStream.getText('UTF-8'))
        // Iterate the HashMap of all Tags and grab only their "names" into our List
        // Prepare a List to collect the tag names into
    def image_tag_list = []
    dockerhub_response.results.each { tag_metadata ->
        image_tag_list.add(tag_metadata.name)    
       // println(tag_metadata.name)
        //println(image_tag_list)
    }
    image_tag_list.sort()
    image_tag_list.each { i ->
        
        println(i)
      }
    } else {
        println("HTTP response error")
        System.exit(0)
    }
   }
}
